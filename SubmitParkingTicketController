package com.parking.controllers.michap21;
import com.parking.domain.michap21.ParkingGarage;
import com.parking.service.michap21.ParkingTicketLookupService;


public class SubmitParkingTicketController {
	
	
	private ParkingGarage parkingGarage;
	

	
	public SubmitParkingTicketController(ParkingGarage parkingGarage) {
		
		this.parkingGarage = parkingGarage;	
	}

	
	
	public String submitCashPayment(String payment, 
			      ParkingTicketLookupService parkingTicketLookupService) throws NumberFormatException {
		
		 float parsedPayment = Float.parseFloat(payment);
				
	     float balance = parkingGarage.getExitGate().getTerminal().calculateBalance(parsedPayment);
	     parkingGarage.getExitGate().getTerminal().storePaymentRecord(parkingTicketLookupService);
	     parkingGarage.getParkingLot().incrementAvailableParkingSpaces();
			
	     String presentationBalance = String.format("%.2f", balance);
	     
		 return presentationBalance;			
	}

	
	
	public boolean submitCreditPayment(String paymentOrCardNumber, 
			     ParkingTicketLookupService parkingTicketLookupService) throws NumberFormatException{
		
	    if(paymentOrCardNumber.length() == 16){
	    	
	    	Long.parseLong(paymentOrCardNumber);
	    	parkingGarage.getExitGate().getTerminal().storePaymentRecord(parkingTicketLookupService);
	    	parkingGarage.getParkingLot().incrementAvailableParkingSpaces();
    	
	    	return true;
	    	
	    }
	    
	    return false;
	}


	
	public boolean isPaymentSufficient(String paymentOrCardNumber) {
		
		float parsedPayment = Float.parseFloat(paymentOrCardNumber);
		boolean paymentIsSufficient = parkingGarage.getExitGate().getTerminal().isPaymentSufficient(parsedPayment);
		
		return paymentIsSufficient;
		
	}

}
